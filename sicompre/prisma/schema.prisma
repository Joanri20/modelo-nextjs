// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Todos los Enum

enum Enum_TipoDocumento {
  CC
  CE
  TI
  PASAPORTE
}

enum Enum_EstadoProceso {
  Abierto
  Cerrado
  EnProceso
}

enum Enum_TipoUsuario {
  Administrador
  Encargado
}

enum Enum_EstadoGeneral {
  Activo
  Deshabilitado
}

// Modelos

model Rubro {
  id          String     @id
  descripcion String
  producto    Producto[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime?  @updatedAt
}

model Producto {
  id                 String               @id @default(cuid())
  descripcion        String
  rubro              Rubro                @relation(fields: [rubroId], references: [id])
  rubroId            String
  valorVigente       Float?               @default(0)
  productoCotizacion ProductoCotizacion[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime?            @updatedAt
}

model ProductoCotizacion {
  id             String              @id @default(cuid())
  producto       Producto            @relation(fields: [productoId], references: [id])
  productoId     String
  cantidad       Float               @default(1)
  cotizacion     Cotizacion?         @relation(fields: [cotizacionId], references: [id])
  cotizacionId   BigInt?
  valorProveedor ProductoProveedor[]
  createdAt      DateTime            @default(now())
  updatedAt      DateTime?           @updatedAt
}

model Cotizacion {
  id                  BigInt               @id @default(autoincrement())
  productos           ProductoCotizacion[]
  fecha               DateTime             @default(now())
  estado              Enum_EstadoProceso   @default(Abierto)
  valorTotal          Float?               @default(0)
  seccion             Seccion              @relation(fields: [seccionId], references: [id])
  usuario             Usuario              @relation(fields: [usuarioId], references: [id])
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  seccionId           BigInt
  usuarioId           String
  cicloContratacion   CicloContratacion?   @relation(fields: [cicloContratacionId], references: [id])
  cicloContratacionId String?
}

model Proveedor {
  id           String              @id @default(cuid())
  nombre       String
  nit          String
  direccion    String
  email        String
  telefono     String
  cotizaciones ProductoProveedor[]
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
}

model ProductoProveedor {
  producto             ProductoCotizacion @relation(fields: [productoCotizacionId], references: [id])
  proveedor            Proveedor          @relation(fields: [proveedorId], references: [id])
  valor                Float              @default(0)
  productoCotizacionId String
  proveedorId          String
  createdAt            DateTime           @default(now())
  updatedAt            DateTime?          @updatedAt

  @@id([productoCotizacionId, proveedorId])
}

model Entidad {
  id                 BigInt              @id @default(autoincrement())
  nombre             String
  nit                String
  direccion          String?
  telefono           String?
  municipio          String
  departamento       String
  pais               String
  web                String?
  email              String?
  resolucionPosesion String?
  fechaPosesion      DateTime?
  estado             Enum_EstadoGeneral  @default(Activo)
  saldoDisponible    Float               @default(0)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  secciones          Seccion[]
  cicloContratacion  CicloContratacion[]
  integrantes        Usuario[]
}

model Seccion {
  id                 BigInt             @id @default(autoincrement())
  nombre             String
  nit                String
  direccion          String?
  telefono           String?
  municipio          String
  departamento       String
  pais               String
  web                String?
  email              String?
  resolucionPosesion String?
  fechaPosesion      DateTime?
  estado             Enum_EstadoGeneral @default(Activo)
  entidadPadre       Entidad            @relation(fields: [entidadId], references: [id])
  saldoDisponible    Float
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  entidadId          BigInt
  Cotizacion         Cotizacion[]
  Usuario            Usuario?           @relation(fields: [usuarioId], references: [id])
  usuarioId          String?
}

model Usuario {
  id                String              @id
  primerNombre      String
  segundoNombre     String?
  primerApellido    String
  segundoApellido   String?
  tipoDocumento     Enum_TipoDocumento  @default(CC)
  documento         String              @unique
  telefono          String?
  celular           String
  email             String
  direccion         String?
  estado            Enum_EstadoGeneral  @default(Activo)
  tipo              Enum_TipoUsuario    @default(Encargado)
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  entidad           Entidad[]
  seccion           Seccion[]
  cotizacion        Cotizacion[]
  cicloContratacion CicloContratacion[]
  password          String              @default("1234")

  @@unique([tipoDocumento, documento])
}

model CicloContratacion {
  id           String       @id @default(cuid())
  fechaInicio  DateTime     @default(now())
  fechaFinal   DateTime     @default(now())
  cotizaciones Cotizacion[]
  usuario      Usuario      @relation(fields: [usuarioId], references: [id])
  entidad      Entidad      @relation(fields: [entidadId], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  usuarioId    String
  entidadId    BigInt
}
